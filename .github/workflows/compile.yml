name: Compile
on:
  - pull_request
  - push

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - Fedora 34 GCC
          - Fedora 34 GCC Strict
          - Fedora 34 GCC Static Analyzer
          - Fedora 34 Clang
          - Fedora 34 Clang -Weverything

        include:
          - name: Fedora 34 GCC
            image: quay.io/vashirov/ldapvim:build
            compiler: gcc
            cpp-compiler: g++
            cflags:  "-O2 -g"

          - name: Fedora 34 GCC strict
            image: quay.io/vashirov/ldapvim:build
            compiler: gcc
            cpp-compiler: g++
            cflags:  "-O2 -g -Wall -Wextra -Wundef -Wpointer-arith -Wfloat-equal \
            -Wstrict-prototypes -Wstrict-overflow=5 -Wwrite-strings -Winit-self \
            -Wuninitialized -Wno-sign-compare -Wshadow -Wformat-security"

          - name: Fedora 34 GCC Static Analyzer
            image: quay.io/vashirov/ldapvim:build
            compiler: gcc
            cpp-compiler: g++
            cflags:  "-O2 -g -fanalyzer"

          - name: Fedora 34 Clang
            image: quay.io/vashirov/ldapvim:build
            compiler: clang
            cpp-compiler: clang++
            cflags: "-O2 -g -Qunused-arguments"

          - name: Fedora 34 Clang -Weverything
            image: quay.io/vashirov/ldapvim:build
            compiler: clang
            cpp-compiler: clang++
            cflags: "-O2 -g -Weverything -Qunused-arguments"

    container:
      image: ${{ matrix.image }}

    steps:
      - uses: actions/checkout@v2
      - name: Checkout and configure
        run: cd $GITHUB_WORKSPACE && ./autogen.sh && ./configure
        env:
          CC: ${{ matrix.compiler }}
          CXX: ${{ matrix.cpp-compiler }}
          CFLAGS: ${{ matrix.cflags || env.CFLAGS }}
          CXXFLAGS: ${{ matrix.cxxflags || env.CXXFLAGS }}
          LDFLAGS: ${{ matrix.ldflags || env.LDFLAGS }}

      - uses: ammaraskar/gcc-problem-matcher@master
      - name: Build using ${{ matrix.compiler }}
        run: bash -c "(make V=0 2> >(tee /dev/stderr)) > log.txt"

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: log.txt
