Index: configure.in
===================================================================
--- configure.in	(revision 43)
+++ configure.in	(working copy)
@@ -30,7 +30,6 @@
 AC_CHECK_LIB([lber],[main])
 AC_CHECK_LIB([ldap],[main],:,AC_MSG_ERROR([libldap not found]))
 AC_CHECK_LIB([ldap],[ldap_initialize],,AC_MSG_ERROR([libldap present but obsolete]))
-AC_CHECK_LIB([ldap],[ldap_bv2dn_x],,AC_MSG_ERROR([libldap 2.2 is required]))
 
 # terminfo
 AC_SEARCH_LIBS([tigetstr],[curses ncurses],,AC_MSG_ERROR([libcurses not found]))
Index: diff.c
===================================================================
--- diff.c	(revision 46)
+++ diff.c	(working copy)
@@ -217,20 +217,6 @@
 }
 
 /*
- * the following is exactly equivalent to ldap_str2dn in libldap >= 2.2,
- * but will fail linking on 2.1.  This way we avoid calling the old 2.1
- * version of ldap_str2dn (leading to a segfault when accessing the result).
- */
-static void
-safe_str2dn(char *str, LDAPDN *out, int flags)
-{
-        struct berval bv;
-        bv.bv_val = str;
-        bv.bv_len = strlen(str);
-        ldap_bv2dn_x(&bv, out, flags);
-}
-
-/*
  * Call frob_ava for every ava in DN's (first) RDN.
  * DN must be valid.
  *
@@ -239,14 +225,14 @@
 int
 frob_rdn(tentry *entry, char *dn, int mode)
 {
-	LDAPDN olddn;
+	LDAPDN *olddn;
 	LDAPRDN rdn;
 	int i;
 	int rc = 0;
 
-	safe_str2dn(dn, &olddn, LDAP_DN_FORMAT_LDAPV3);
+	ldap_str2dn(dn, &olddn, LDAP_DN_FORMAT_LDAPV3);
 
-	rdn = olddn[0];
+	rdn = (**olddn)[0];
 	for (i = 0; rdn[i]; i++) {
 		LDAPAVA *ava = rdn[i];
 		char *ad = ava->la_attr.bv_val; /* XXX */
