.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.33.
.TH LDAPVI "1" "January 2004" "ldapvi 1.1" "User Commands"
.SH NAME
ldapvi \- LDAP client
.SH SYNOPSIS
.B ldapvi
[\fIOPTION\fR]... [\fIFILTER\fR] [\fIAD\fR]...
.SH DESCRIPTION
.IP
ldapvi \fB\-\-diff\fR FILE1 FILE2
.PP
Perform an LDAP search and update results using a text editor.
.SS "Connection options:"
.TP
\fB\-h\fR, \fB\-\-host\fR URL
Server.
.TP
\fB\-D\fR, \fB\-\-user\fR USER
Search filter or DN: User to bind as.
.TP
\fB\-w\fR, \fB\-\-password\fR SECRET
USER's password.
.SS "Search parameters:"
.TP
\fB\-b\fR, \fB\-\-base\fR DN
Search base.
.TP
\fB\-s\fR, \fB\-\-scope\fR SCOPE
Search scope.  One of base|one|sub.
.TP
\fB\-S\fR, \fB\-\-sort\fR KEYS
Sort control (critical).
.SS "Miscellaneous options:"
.TP
\fB\-A\fR, \fB\-\-add\fR
Don't search, start with empty file.
.TP
\fB\-a\fR, \fB\-\-deref\fR
never|searching|finding|always
.TP
\fB\-M\fR, \fB\-\-managedsait\fR
manageDsaIT control (critical).
.TP
\fB\-Z\fR, \fB\-\-starttls\fR
Require startTLS.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Disable progress output.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Note every update.
.TP
-!, \fB\-\-noquestions\fR
Don't ask for confirmation.
.TP
\fB\-H\fR, \fB\-\-help\fR
This help.
.PP
Environment variables: VISUAL, EDITOR, PAGER.
.SS "User names can be specified as distinguished names:"
.IP
uid=foo,ou=bar,dc=acme,dc=com
.SS "or search filters:"
.IP
(uid=foo)
.PP
Note the parenthesis, which can be omitted from search filters
usually, but are required here.  For this searching bind to
work your client library must be configured with appropriate
default search parameters.
.PP
A special (offline) option is \fB\-\-diff\fR, which compares two files
and writes any changes to standard output in LDIF format.
.SH "REPORTING BUGS"
Report bugs to "david@lichteblau.com".
.SH FILE FORMAT
ldapvi uses an LDIF-like syntax, but not standard LDIF.  For a precise
definition, see `ldapvi-file' below.  LDIF is defined in RFC 2849.

RFC 2849 modifies the language generated by its BNF grammar with the
"Notes on LDIF Syntax" (2) and (3) presented there.  These notes do not
apply to ldapvi syntax as stated: Line folding and comments can be used,
but are allowed specificially by our modified BNF, not hacked into the
rules later.  Line folding is allowed only in LDIF-compatible attribute
values and comments.  ldapvi files cannot be read line-by-line without
knowing the encoding of those lines, since newlines are permitted in
certain attribute value representations.

The following rules are used as defined in RFC 2849 and not reproduced
here: AttributeDescription, SAFE-STRING, BASE64-STRING, SPACE.
.SH Changes to the RFC 2849 BNF grammar
.nf
ldapvi-file = vspace ldif-attrval-record
              *(vspace SEP vspace ldif-attrval-record) vspace
ldif-attrval-record = *(comment) dn-spec SEP 1*(*(comment) attrval-spec)

vspace = *(comment / sep)
comment = "#" *(unescaped-char) *(SEP " " *(unescaped-char)) SEP

dn-spec = key distinguishedName SEP
key = number / "add"
distinguishedName = value-spec                  ;encoding an RFC 2253 DN

attrval-spec = AttributeDescription value-spec SEP
value-spec = (SPACE escaped-string /            ;escape CR/LF with '\\\\'
              ":" SPACE 0*1(SAFE-STRING         ;LDIF compatible
                            *(SEP " " *SAFE-CHAR)) /
              "::" SPACE BASE64-STRING /        ;ditto
              ":" number SPACE 0*1(octet) /     ;exactly `number' octets
              ":<" SPACE url /                  ;only file:// supported
              ":crypt" SPACE password /         ;for userPassword
              ":md5" SPACE password /
              ;; other encoding markers reserved
             )

octet = %x00-ff
number = 1*(%x30-39)                            ;any decimal number
unescaped-char = %x00-%x09 / %x0a-0c / %x0d-ff  ;any except for CR/LF.
escaped-string = *(unescaped-char / %x5c %x0a / %x5c %x0d / %x5c %x5c)
password = 0*unescaped-char
SEP = LF                                        ;this is a unix program!

.SH AUTHOR
David Lichteblau <david@lichteblau.com>
