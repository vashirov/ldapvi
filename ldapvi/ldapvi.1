.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH LDAPVI "1" "August 2006" "ldapvi 1.5+git" "User Commands"
.SH NAME
ldapvi \- LDAP client
.SH SYNOPSIS
.B ldapvi
[\fIOPTION\fR]... [\fIFILTER\fR] [\fIAD\fR]...
.SH DESCRIPTION
.IP
ldapvi \fB\-\-diff\fR FILE1 FILE2
.SS "Quickstart:"
.IP
ldapvi \fB\-\-discover\fR \fB\-\-host\fR HOSTNAME
.PP
Perform an LDAP search and update results using a text editor.
.SS "Connection options:"
.TP
\fB\-h\fR, \fB\-\-host\fR URL
Server.
.TP
\fB\-D\fR, \fB\-\-user\fR USER
Search filter or DN: User to bind as.     [1]
.TP
\fB\-w\fR, \fB\-\-password\fR SECRET
USER's password.
.SS "Search parameters:"
.TP
\fB\-b\fR, \fB\-\-base\fR DN
Search base.
.TP
\fB\-s\fR, \fB\-\-scope\fR SCOPE
Search scope.  One of base|one|sub.
.TP
\fB\-S\fR, \fB\-\-sort\fR KEYS
Sort control (critical).
.SS "Miscellaneous options:"
.TP
\fB\-A\fR, \fB\-\-add\fR
Don't search, start with empty file.  See \fB\-o\fR.
.TP
\fB\-o\fR, \fB\-\-class\fR OBJCLASS
Class to add.  Can be repeated.  Implies \fB\-A\fR.
.TP
\fB\-a\fR, \fB\-\-deref\fR
never|searching|finding|always
.TP
\fB\-d\fR, \fB\-\-discover\fR
Auto\-detect naming contexts.              [2]
.TP
\fB\-c\fR, \fB\-\-config\fR
Print parameters in ldap.conf syntax.
.TP
\fB\-\-encoding\fR [ASCII|UTF\-8|binary]
The encoding to allow.  Default is UTF\-8.
.TP
\fB\-M\fR, \fB\-\-managedsait\fR
manageDsaIT control (critical).
.TP
\fB\-Z\fR, \fB\-\-starttls\fR
Require startTLS.
.TP
\fB\-\-tls\fR [never|allow|try|strict]
Level of TLS strictess.
.TP
\fB\-R\fR, \fB\-\-read\fR DN
Same as \fB\-b\fR DN \fB\-s\fR base '(objectclass=*)' + *
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Disable progress output.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Note every update.
.TP
\-!, \fB\-\-noquestions\fR
Don't ask for confirmation.
.TP
\fB\-H\fR, \fB\-\-help\fR
This help.
.PP
Environment variables: VISUAL, EDITOR, PAGER.
.SS "[1] User names can be specified as distinguished names:"
.IP
uid=foo,ou=bar,dc=acme,dc=com
.IP
or search filters:
.IP
(uid=foo)
.IP
Note the use of parenthesis, which can be omitted from search
filters usually but are required here.  For this searching bind to
work, your client library must be configured with appropriate
default search parameters.
.PP
[2] Repeat the search for each naming context found and present the
.TP
concatenation of all search results.
Conflicts with \fB\-\-base\fR.
.IP
With \fB\-\-config\fR, show a BASE configuration line for each context.
.PP
A special (offline) option is \fB\-\-diff\fR, which compares two files
and writes any changes to standard output in LDIF format.
.SH "REPORTING BUGS"
Report bugs to "ldapvi@lists.askja.de".
.SH GETTING STARTED
Assuming a suitably configured LDAP library, run ldapvi without arguments
to see all entries available. 

Otherwise, try `ldapvi -h HOSTNAME --discover' to query the ROOT DSE for
available naming contexts.

Once that works, run `ldapvi -h HOSTNAME --discover --config' to
generate sample configuration that can be pasted into ~/.ldaprc or
/etc/ldap/ldap.conf.

.SH FILE FORMAT
ldapvi uses an LDIF-like syntax, but not standard LDIF.  For a precise
definition, see `ldapvi-file' below.  LDIF is defined in RFC 2849.

RFC 2849 modifies the language generated by its BNF grammar with the
"Notes on LDIF Syntax" (2) and (3) presented there.  These notes do not
apply to ldapvi syntax as stated: Line folding and comments can be used,
but are allowed specificially by our modified BNF, not hacked into the
rules later.  Line folding is allowed only in LDIF-compatible attribute
values and comments.  ldapvi files cannot be read line-by-line without
knowing the encoding of those lines, since newlines are permitted in
certain attribute value representations.

The following rules are used as defined in RFC 2849 and not reproduced
here: AttributeDescription, SAFE-STRING, BASE64-STRING, SPACE.
.SH Changes to the RFC 2849 BNF grammar
.nf
ldapvi-file = vspace ldapvi-record
              *(vspace SEP vspace ldapvi-record) vspace
ldapvi-record = ldapvi-attrval-record
	        / ldapvi-rename-record
		/ ldapvi-modify-record
ldapvi-attrval-record = *(comment) dn-spec 1*(*(comment) attrval-spec)
ldapvi-rename-record = *(comment)
                       "rename" distinguishedName SEP
		       ("add" / "replace") value-spec SEP
ldapvi-modify-record = *(comment)
                       "modify" distinguishedName SEP
		       1*(*(comment) mod-spec)
mod-spec = ("delete" / "add" / "replace") ad-value SEP
	   *(value-enc SEP)

vspace = *(comment / sep)
comment = "#" *(unescaped-char) *(SEP " " *(unescaped-char)) SEP

dn-spec = key distinguishedName SEP
key = number / "add"
distinguishedName = value-spec                  ;encoding an RFC 2253 DN

attrval-spec = AttributeDescription value-spec SEP
value-spec = value-simple / value-enc
value-simple = SPACE escaped-string             ;escape CR/LF with '\\\\'
value-enc = (":;" SPACE escaped-string /        ;ditto
             ":" SPACE 0*1(SAFE-STRING          ;LDIF compatible
                           *(SEP " " *SAFE-CHAR)) /
             "::" SPACE BASE64-STRING /         ;ditto
             ":" number SPACE 0*1(octet) /      ;exactly `number' octets
             ":<" SPACE url /                   ;only file:// supported
             ":crypt" SPACE password /          ;for userPassword
             ":cryptmd5" SPACE password /
             ":md5" SPACE password /
             ":smd5" SPACE password /
             ":sha" SPACE password /
             ":ssha" SPACE password /
             ;; other encoding markers reserved
            )

octet = %x00-ff
number = 1*(%x30-39)                            ;any decimal number
unescaped-char = %x00-%x09 / %x0a-0c / %x0d-ff  ;any except for CR/LF.
escaped-string = *(unescaped-char / %x5c %x0a / %x5c %x0d / %x5c %x5c)
password = 0*unescaped-char
SEP = LF                                        ;this is a unix program!

ad-value = value-spec  ;parsing as an AttributeDescription

.SH BUGS
Please report bugs to <ldapvi@lists.askja.de>.

.SH AUTHOR
David Lichteblau <david@lichteblau.com>
